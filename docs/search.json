[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Crickles provides cardiac stress analysis calculated from the activities you record on your sports devices so that while you’re keeping fit you have tools to help you quantify whether and when you risk doing too much. We created it because none of the other fitness apps do an adequate job of this one thing. The features that matter to Crickles are:\n\nThere is a metric that preferences heart rate data to model the stress incurred from any sports activity captured on a watch, computer or training platform. In Crickles this is called the Cardiac Stress Score (CSS).\nThe models must be credible and ideally described openly so that you can see how it works.\nWhile being capable of using whatever instrumentation is available, such as chest strap heart rate monitors, sports watches or power meters, the analysis must not diverge dramatically in aggregate according to the choice of instrument - i.e. if power data and heart rate data are both sometimes used the results must display consistency in the long run.\nIf heart rate and power data are both missing from some or all activities the stress arising from those activities must still be well and consistently modelled.\nStress from activities over time should be aggregated in a way that again must be credible and not opaque.\nIt should be easy for any user to compare their aggregate monthly or seasonal stress against age-group peers and to see whether they are doing statistically more or less than their peer population.\nTo the extent possible, the cause of significant differences - for example, more or less intensity, or more or less exercise time - should be shown.\n\nThis is exactly what Crickles does. We’re still working on finding the best way to present the models (point 2) but the intent is there as you can see in the Research section.\nCrickles also picks out certain anomalies in heart rate data from your device and may help you to identify a malfunctioning chest strap or even a pattern of irregularity that may warrant attention, although Crickles itself is in no sense a medical tool and cannot diagnose your cardiac health."
  },
  {
    "objectID": "about.html#why-crickles",
    "href": "about.html#why-crickles",
    "title": "About",
    "section": "",
    "text": "Crickles provides cardiac stress analysis calculated from the activities you record on your sports devices so that while you’re keeping fit you have tools to help you quantify whether and when you risk doing too much. We created it because none of the other fitness apps do an adequate job of this one thing. The features that matter to Crickles are:\n\nThere is a metric that preferences heart rate data to model the stress incurred from any sports activity captured on a watch, computer or training platform. In Crickles this is called the Cardiac Stress Score (CSS).\nThe models must be credible and ideally described openly so that you can see how it works.\nWhile being capable of using whatever instrumentation is available, such as chest strap heart rate monitors, sports watches or power meters, the analysis must not diverge dramatically in aggregate according to the choice of instrument - i.e. if power data and heart rate data are both sometimes used the results must display consistency in the long run.\nIf heart rate and power data are both missing from some or all activities the stress arising from those activities must still be well and consistently modelled.\nStress from activities over time should be aggregated in a way that again must be credible and not opaque.\nIt should be easy for any user to compare their aggregate monthly or seasonal stress against age-group peers and to see whether they are doing statistically more or less than their peer population.\nTo the extent possible, the cause of significant differences - for example, more or less intensity, or more or less exercise time - should be shown.\n\nThis is exactly what Crickles does. We’re still working on finding the best way to present the models (point 2) but the intent is there as you can see in the Research section.\nCrickles also picks out certain anomalies in heart rate data from your device and may help you to identify a malfunctioning chest strap or even a pattern of irregularity that may warrant attention, although Crickles itself is in no sense a medical tool and cannot diagnose your cardiac health."
  },
  {
    "objectID": "about.html#medical-disclaimer",
    "href": "about.html#medical-disclaimer",
    "title": "About",
    "section": "Medical disclaimer",
    "text": "Medical disclaimer\nTo repeat, Crickles is in no sense a medical tool and cannot diagnose your cardiac health. Also, there is no generally accepted agreement on how best to quantify cardiac stress through exercise; Crickles aims to come up with a sensible, high-quality measure in the absence of established science.\nOn the other hand, Mark, the Crickles cardiologist, does respond to questions from the Crickles community as best he can."
  },
  {
    "objectID": "about.html#privacy-policy",
    "href": "about.html#privacy-policy",
    "title": "About",
    "section": "Privacy policy",
    "text": "Privacy policy\nCrickles will never disclose any identifying information about you to a third party. “Identifying information” includes your name, your date of birth, activity location data or the name you’ve given to any activity. We do not seek to identify your IP address and we do not, nor will we ever, make money from selling your data.\nWe do use your data to explore patterns of health, fitness and exercise and to try to make Crickles as useful as possible. Data published in any research or online articles will also be completely anonymised"
  },
  {
    "objectID": "about.html#infrastructure",
    "href": "about.html#infrastructure",
    "title": "About",
    "section": "Infrastructure",
    "text": "Infrastructure\nCrickles runs on Amazon Web Services cloud infrastructure. Since the website and Navigator are free to access yet incur cost, there is less redundancy (and hence resilience) than you might expect in an app that carries a monthly usage charge. The up-time over many years consistently stands at over 99% but it can, rarely, falter under volume surges or on account of sporadic technical issues. If you see anything that doesn’t look right please do get in touch to let us know, while being thankful for the fact that Crickles is free and usually reliable!"
  },
  {
    "objectID": "get-started.html",
    "href": "get-started.html",
    "title": "Get Started",
    "section": "",
    "text": "Crickles analyses activties that you record on your sports devices (Garmin, Wahoo, Zwift and so forth) and shows the results of this analysis on the Navigator page. Crickles itself does not access your sports devices directly but connects to intervals.icu, which offers connectivity to all of the major devices and platforms.\nIf you don’t have a log-in for the Navigator yet here’s how you get started.\n\nCreate an intervals.icu account and from there link your sports devices and platforms (Garmin Connect, Wahoo, Zwift etc.). Here, make sure that your activities come directly from your devices, and not via Strava. No activities that are loaded into intervals.icu from Strava will be visible in the Crickles Navigator.\nTo make life easier, make sure you remain logged on to Intervals throughout the next steps.\nOnce you can see the activities you expect on intervals.icu, go to the Navigator page where you should be prompted to create a new Crickles account using your email address. If you’re a seasoned Crickles user your old Crickles data will probably be retrieved automatically so long as you use the same email address on Intervals that you used previously on Crickles. \nIf Crickles has not managed to recover your date of birth from your Crickles Classic account you’ll be prompted to re-enter it.\nYou’ll then be prompted to Connect to Intervals. Please do so.\nThis should take you through to the Intervals “authorise Crickles” page. Please do this too.\nReturn to the Crickles Navigator. On your first visit your activities will probably take a minute or two to load, which can feel like a long time. According to how much data there is, you’re likely to see a notification in brown in the bottom right of your screen followed, once a usable amount of data has been fetched and analysed, by a blue notification in the top of the sidebar. This time-consuming load only happens once.\n\nIf you have any issues with this process please get in touch, either directly or through the Contact page."
  },
  {
    "objectID": "contact.html",
    "href": "contact.html",
    "title": "Contact",
    "section": "",
    "text": "Full Name\n            \n        \n        \n        \n            Email Address\n            \n        \n        \n        \n            Subject\n            \n        \n        \n        \n            Message\n            \n        \n        \n        \n            Send Message"
  },
  {
    "objectID": "arrhythmia.html#introduction",
    "href": "arrhythmia.html#introduction",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Introduction",
    "text": "Introduction\nThis study explores the feasibility of using heart rate data as frequently captured by keen amateur cyclists during exercise to detect the presence of heart rhythm problems."
  },
  {
    "objectID": "arrhythmia.html#methods",
    "href": "arrhythmia.html#methods",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Methods",
    "text": "Methods\nData is gathered from an existing project that is used by over 1,000 (mainly) amateur athletes to compare the cardiac stress accrued through exercise with that of their anonymised peers. “Gappiness” in observed heart rate levels is defined and its frequent presence at the top end of the heart rate range is tested for association with athlete reports of arrhythmia obtained through a survey."
  },
  {
    "objectID": "arrhythmia.html#results",
    "href": "arrhythmia.html#results",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Results",
    "text": "Results\nIn an analysis of over 130,000 activities from 189 athletes who responded to the survey, a statistically significant association was found between observed heart rate gappiness and reported arrhythmia, both in a point-biserial correlation check (p-value = 0.005) and a logistic regression (p-value = 0.01)."
  },
  {
    "objectID": "arrhythmia.html#discussion",
    "href": "arrhythmia.html#discussion",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Discussion",
    "text": "Discussion\nThis association has a specificity of 97.6% and a positive predictive value of 62.5%. For an athlete for whom this predicts arrhythmia it would be worthwhile to seek a medical consultation. However, the sensitivity is low so a failure to predict arrhythmia is no reassurance that there is in fact no heart rhythm issue. This is to be expected as we only know whether survey respondents report having or having ever had a heart rhythm problem. Some of those who report a problem may have been treated prior to recording the activities analysed and conversely for others the onset may have been recent so many of their recorded activities may pre-date the condition. We surmise that heart rate readings recorded using chest straps are more likely to detect arrhythmia with this method than those recorded with smart watches measuring heart rate optically at the wrist; we note that cyclists more frequently use the former and runners the latter."
  },
  {
    "objectID": "arrhythmia.html#conclusion",
    "href": "arrhythmia.html#conclusion",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Conclusion",
    "text": "Conclusion\nHeart rhythm problems are increasingly observed in people who engage in high levels of endurance sports over many years, especially cyclists. A technique that can sometimes detect arrhythmia using data already collected during sport is therefore of potential merit. Further investigation, including into the evolution of changes in gappiness before, during and after the onset of heart rhythm problems as well as the extension to a wider pool of athletes, would appear to be worthwhile."
  },
  {
    "objectID": "arrhythmia.html#data-acquisition",
    "href": "arrhythmia.html#data-acquisition",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Data acquisition",
    "text": "Data acquisition\nThe data that is used in this study is from the Crickles project, whose purpose is to collect data from amateur endurance athletes and analyse the extent of “cardiac stress” accrued through activities such as cycling and running. Data from athletes who sign up to Crickles is collected from the popular website Strava.com. Athletes who wish to participate in the Crickles project enroll by hitting the Connect with Strava button on the website http://crickles.org. This authorises the Crickles software to access the athlete’s data. Crickles then does an initial load of some years of historical data and adds the athlete to the ongoing update.\nCrickles performs a range of analyses on this data, the results of which are securely stored on Crickles AWS Cloud servers. Each athlete can access analysis on their own activities in comparision with the anonymised data of all other Crickles participants through the Crickles Navigator website http://navigator.crickles.org.\nThroughout this paper the term “activity” is used in the natural sense of a single, complete sport session recorded by an athlete who defines its duration by starting their sports device at the start of the session and stopping it at the end.\nCrickles is purely a research platform. It does not charge users, nor does it raise money by selling on users’ data or in any other way. Athletes can unauthorise Crickles’ access to their data at any time. Recently, Crickles users were asked to voluntarily complete a survey to facilitate the research into the detection of arrhythmias."
  },
  {
    "objectID": "arrhythmia.html#heart-health-survey-questionnaire",
    "href": "arrhythmia.html#heart-health-survey-questionnaire",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Heart health Survey Questionnaire",
    "text": "Heart health Survey Questionnaire\nCrickles users were invited to complete a short questionnaire that captured information about their cardiac health. Questions include whether they have arrhythmia or diabetes, been prescribed beta blockers, experienced chest pain, fainted or had a heart attack. To date, 236 athletes have completed the survey. A few of these either don’t have any activities loaded by Crickles or only have activities without heart rate data; excluding those gives us 228 athletes whose heart rate data we can analyse in conjunction with their heart health data.\nThe only response that we use from the survey is to the question, Do you have, or have you had a heart rhythm problem?."
  },
  {
    "objectID": "arrhythmia.html#analysis-of-the-heart-rate-data",
    "href": "arrhythmia.html#analysis-of-the-heart-rate-data",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Analysis of the Heart Rate Data",
    "text": "Analysis of the Heart Rate Data\nWe aimed to determine if persistent observable irregularities in the heart rate data might be more prevalent in those with a self reported history of arrhythmia. To this end we want to clean the data of readings that are wrong in uninteresting ways while discarding as little as possible that may prove useful.\nWe begin with two measures of the regularity of the heart rate chart for any given activity. The first is stickiness. We observe (see Appendix) that sometimes the heart rate reading jams on a certain value for an implausibly long period of time. Where this happens, we believe it to be an error on the part of the recording sports device. Moreover, it is unlikely to be an interesting error in which the athlete’s cardiac behaviour plays any part. From the perspective of experience, we might expect that any record of a heart rate held at the same level for over a minute is wrong: while the fluctuation of, say, someone cycling at threshold in a time trial might be low, we would expect to see some change over the course of any minute. If we look at the actual record of reported sustained heart rates, there is a wide range of values; the maximum currently stands at over 37 hours! However, 95% of the range is within 90 seconds and so we take this as our threshold for reporting a probable error. Here is the distribution of values that are less than 90 seconds:\n\n\n\n\n\nStickiness frequency\n\n\n\n\nWe call an activity in which we see a stuck heart rate value for longer than 90 seconds sticky. On the Crickles Navigator these activities are flagged Check_Strap.\nFor our second measure, we’re interested in how jumpy the heart rate chart is. This is potentially much more interesting physiologically as an erratic heart rate may well be indicative of some kind of a pathology. The study of time series volatility is an advanced science and there are many techniques that we could deploy for measurement. For example, we might use a stochastic volatility model with a jump process to fit the patterns that we see (Zou 2014). However, the nature of athletic exercise and the limitations of the sports devices mitigate against several of these. To take some examples:\n\nKeen athletes quite often engage in High Intensity Interval Training (HIIT) sessions. A typical protocol might be to ride at maximum effort on a turbo trainer for 30 seconds then rest for 30 seconds then repeat, and to do this in blocks of ten repetitions with a recovery break between each block.\nDifferent sports devices record the heart rate at different sampling frequencies. Typically, a sports watch will sample infrequently at low heart rates and more frequently at high heart rates to prolong battery life. In contrast, a bike computer that records power from a power meter as well as heart rates will usually sample every second. The method that the device chooses for sampling the data is set by a combination of undocumented logic intrinsic to each device and, sometimes, configuration variables that can be set by the device owner. We do not have knowledge of either what sports device is being used or of how it is configured.\nAll sports devices are prone to contact failures with the skin. It’s therefore reasonably common to see wrong readings towards the start of a bike ride when a cyclist is speeding downhill; at this time with little effort and no sweat build-up and the compounding effect of a jersey flapping against a chest strap, wrong high readings are sometimes seen.\nAs we saw above, sports devices reasonably often show high readings that are simply higher than we believe can be correct.\n\nPoints 1 and 2 present technical challenges to certain volatility models. Points 3 and 4 challenge any volatility model by the introduction of plainly wrong data; however, these phenomena, especially point 4, may potentially be responsive to electrical activity in the heart and even where the readings are numerically wrong they may carry signal value: the fact that the sports device is reporting a wrong value may itself be diagnostic! Unlike sticky readings, we therefore will not wish to discard them.\nBoth the variable and unknown sampling regimes of devices and especially the entanglement of potentially signal-bearing errors with the true heart rate data render the use of time series volatility models problematic. Instead, we might turn to pattern matching algorithms. In principle, we could split each heart rate chart into a set of short heart rate sequences, parametrise these in some way and then use a machine learning technique to hunt for assocations with arrhythmia. While this is likely to be complex, computationally expensive and opaque, it remains open to us as a future research direction when we have a larger data set of survey responses.\nHere, we rely on a simpler approach. We formulate a flag for determining whether or not a heart rate chart in its entirety is erratic by introducing the concept of the natural maximum heart rate for an activity. This is calculated by looking for gaps in the range of observed heart rate readings over the modal value. The reasoning behind this is that at higher heart rate levels the athlete’s heart rate typically steps up and down one bpm at a time, and certainly we don’t normally observe discountinuities in the range of heart rates attained.\nIf there are no such gaps the natural maximum for the activity is equal to the actual observed maximum. If there are such gaps then the natural maximum is the heart rate level immediately below the lowest such gap. We hypothesise that the gaps most likely to be indicative of arrhythmia are those that occur when the athlete is under exertion. In the course of other analysis not covered in this paper we make a running estimate of the Lactate Threshold Heart Rate (LTHR) of each athlete. (As an alternative, LTHR can be roughly approximated as a percentage of the athlete’s maximum heart rate.) We call an activity for which the maximum heart rate exceeds the natural maximum and during which the athlete’s heart rate also exceeds his or her prevailing LTHR gappy; the quality of being gappy is gappiness.\nHere’s an example of a typical gappy heart rate chart:\n\n\n\n\n\nAn example of gappiness\n\n\n\n\nClearly, something unusual is happening for the burst in which the heart rate pops above the line, drawn at 178bpm. If we zoom in on the four minute period around the burst we see this:\n\n\n\n\n\nGappiness at per second resolution\n\n\n\n\nHere, 178bpm is the natural maximum. We can’t know whether the little spike is a faithful reading of the athlete’s heart rate or a blip in the device, and, if the latter, whether or not the blip was caused by electrical cardiac activity. On its own, this incident has no medical significance. However, we have hundreds or thousands of such records for most athletes and we hypothesise that when such spikes occur with heightened frequency for an athlete it may be associated with arrhythmia.\nHere are a couple more examples from a different athlete:\n\n\n\n\n\nFurther examples of gappiness\n\n\n\n\nAs a further filter to remove activities where we have reason to believe that gappiness is occuring due to a limitation or fault in the device, we consider also the low end of the heart rate range. By analogy with the natural maximum, we can also find the natural minimum heart rate for an activity: this is the level above which the observed heart rate range is complete up to the modal value. It is reasonably common to see a running activity recorded with a sports watch show a natural minimum heart rate above the actual minimum as the watch takes some seconds to catch up with the initial exertion of the athlete.\nFinally, here’s an example where gappiness breaks out in a sequence of efforts during an interval session:\n\n\n\n\n\nRepeated gappiness during intervals\n\n\n\n\nWhile gaps at the low end are logically independent and of a different character from gaps at the high end, as a precaution when an activity that is gappy at the high end is also gappy at the low end we flag it differently. Here’s an example of an activity that is gappy at both ends:\n\n\n\n\n\nExample of an unclear activity\n\n\n\n\nActivities that are not sticky and that are gappy at the high end but not at the low end are flagged as irregular. Gappy non-sticky activities that are gappy at both the high and the low ends are marked as unclear.\nActivities that are neither sticky (flagged as Check_Strap), irregular or unclear are marked as regular. Whereas a volatility metric or a machine learning algorithm could give us a degree of irregularity for an activity, this methodology simply tells us whether or not an activity appears irregular. We rely on the frequency of such readings to give us a continuous measure for an athlete.\nThis table gives an indication of the frequency of incidence of these phenomena:\n\n\n\nRegularity - counts and percentages\n\n\nCategory\ncount\npercentage\n\n\n\n\nRegular\n1,204,160\n86.4\n\n\nUnclear\n91,817\n6.6\n\n\nCheck_Strap\n72,984\n5.2\n\n\nIrregular\n25,267\n1.8\n\n\n\n\n\nThe category of any particular activity carries low informational value. However, we believe that when aggregated by athlete there is scope for significance to arise. On a prosaic level, when the proportion of an athlete’s activities that report Check_Strap rises well above the population average we can propose that it may be time to consider getting a new strap (or relevant sports device).\nThe more interesting questions arise from an exploration of supra-normal frequencies of activities flagged as irregular.\nFirst we make a detour to consider the sport(s) that will be the focus for the remainder of this analysis."
  },
  {
    "objectID": "arrhythmia.html#focus-on-cycling-and-chest-straps",
    "href": "arrhythmia.html#focus-on-cycling-and-chest-straps",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Focus on cycling and chest straps",
    "text": "Focus on cycling and chest straps\nWe would like to restrict our study to cyclists using chest straps. Selecting only cyclists is straightforward; we can also include cyclists using turbo trainers and those on platforms such as Zwift that offer “virtual rides”. Selecting only activities in which a chest strap was used is more problematic. This is because it is possible for an athlete to use one device to collect and record the data and another to measure the heart rate. For example, when using a Garmin Forerunner sports watch the heart rate can be measured either from the in-built optical heart rate monitor or from a chest strap. Likewise, while most cyclists using a bike computer will measure their heart rate (if they do so at all) using a chest strap, it is nonetheless possible for them to use a sports watch for the purpose and to connect the two using bluetooth. From the data available to us, even though we can sometimes find the name of one “device” that was used on an activity, we have no failsafe way of knowing which device was used to record the heart rate. For example, in an extreme case in which a cyclist on a Taxc Neo turbo trainer records a ride on the software platform Zwift using a Wahoo Elemnt bike computer and measures his or her heart rate with a Garmin Forerunner watch, four “devices” are being used and we know, at best, the name of only one of them, and it probably won’t be the Forerunner.\nThere are, though, de facto correlations between exercise types and equipment. Looking only at runs, rides and virtual rides and classifying each device into a “device family”, we analysed the frequency of use on a random sample of over 10,000 activities:\n\n\n\nSample count by device family and sport\n\n\ndevice_family\nRide\nRun\nVirtualRide\n\n\n\n\nbike_computer\n5,945\n6\n15\n\n\nphone\n214\n9\n0\n\n\nplatform\n121\n0\n1,446\n\n\ntrainer\n116\n0\n16\n\n\nwatch\n770\n897\n10\n\n\n\n\n\nWe see that in this sample, the large majority of cyclists on non-virtual rides used bike computers, almost all runners used sports watches and most virtual rides took place on platforms such as Zwift or Trainer Road. Even though we don’t know how many of the runners also used chest straps as well as sports watches or how many of the cyclists took heart rate readings from a watch, we believe that the use of chest straps is more prevalent than watches for heart rate recording amongst cyclists as it would be duplicative, inconvenient and of little obvious benefit to use both a bike computer and a sports watch at the same time. Furthermore, as keen cyclists ourselves, this is what the authors consistently observe.\nMore information on the use of various types of device is supplied in the appendix, Analysis of device by sport."
  },
  {
    "objectID": "arrhythmia.html#unreliable-straps",
    "href": "arrhythmia.html#unreliable-straps",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Unreliable straps",
    "text": "Unreliable straps\nThe table above showed us the overall proportion of activities that are flagged with Check_Strap. When we break this down to find the ratio for each athlete and plot the distribution of ratios we get this:\n\n\n\n\n\nFrequency of ‘Check Strap’\n\n\n\n\nThere is a non-normal distribution of values with a median of 3.94% and a mean of 6.85%. The distribution falls monotonically from the mode until about 15%, which we have marked with a dotted line. We hypthosise that the athletes represented by ratios to the right of the line are likely to be repeatedly exercising with sports devices (possibly chest straps) that are consistently not working. We therefore removed these athletes from our sample.\nParing down to only cycling activities for which we have heart rate data and removing the higher-error athletes still leaves us with 1085 athletes and 813,633 activities. Next, we have to restrict our focus much further."
  },
  {
    "objectID": "arrhythmia.html#irregularity-and-arrhythmia",
    "href": "arrhythmia.html#irregularity-and-arrhythmia",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Irregularity and arrhythmia",
    "text": "Irregularity and arrhythmia\nIs frequency of irregular activities associated with a diagnosis of arrhythmia in cyclists? To answer that question we need to:\n\ncalculate the ratio of activities marked as irregular for each cyclist in our reduced population;\nfind those for whom we have a survey response - this is a large reduction in data;\ntest the association strength between each athlete’s irregular ratio and the presence/absence of an arrhythmia diagnosis.\n\nSteps 1 and 2 are simply data manipulation. Since we don’t believe sticky activities to be informational and we’re uncertain about unclear ones, we set our irregular ratio to be the proportion of activities marked irregular of those marked either irregular or regular.\nAt this point we have reduced our survey population down to 212 athletes. Of these, 60 (28.3%) report having an arrhythmia diagnosis. This is a high percentage, which we can attribute to a strong selection bias amongst those who choose to complete the survey.\nThe distribution of irregular ratios is shown by a Shapiro test to be significantly non-normal, which is not surprising.\nWe can compare the irregular ratios for athletes with and without arrhythmia:\n\n\n\n\n\nA violin plot comparing irregular ratios for athletes with and without arrhythmia\n\n\n\n\nThe non-arrhythmics tend to clump on the low ratios whereas the arrhythmics have a higher proportion of elevated values.\nAs a first check of whether this is supported statistically, we can run a point-biserial correlation check; here arr_num is 1 for athletes who have a diagnosis of arrhythmia and 0 for those who don’t:\n\n\n\n    Pearson's product-moment correlation\n\ndata:  survey_results$irreg_ratio and survey_results$arr_num\nt = 4.0299, df = 210, p-value = 7.801e-05\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.1381621 0.3886412\nsample estimates:\n      cor \n0.2679231 \n\n\nThe p-value of 0 suggests that the correlation of 26.8% represents a meaningful association whose probability of being due to chance is low.\nWe can explore this further with a logistic regression:\n\nFitting generalized (binomial/logit) linear model: Arrhythmia ~ irreg_ratio\n\n\n\n\n\n\n\n\n\n \nEstimate\nStd. Error\nz value\nPr(&gt;|z|)\n\n\n\n\n(Intercept)\n-1.409\n0.2107\n-6.688\n2.267e-11\n\n\nirreg_ratio\n0.146\n0.04202\n3.475\n0.0005105\n\n\n\nAgain, the low p-value of 0.001 for irreg_ratio indicates a significant relationship.\nRe-running the violin plot using the fitted values from the logistic regression model rather than the observed irregular ratios preserves the pattern of the chart above:\n\n\n\n\n\nModelled likelihood of arrhythmia by athlete’s own report\n\n\n\n\nNow we can apply the model to all of the athletes for whom we have heart rate data from cycling but no survey response:\n\n\n\nArrhythmia prediction for athletes with no survey response\n\n\npredicted_arrhythmia\nn\n\n\n\n\nFALSE\n849\n\n\nTRUE\n23\n\n\n\n\n\nThis predicts that 2.6% of our population would have arrhythmia as gauged by the irregular ratio."
  },
  {
    "objectID": "arrhythmia.html#confusion-matrix-and-the-utility-of-the-prediction",
    "href": "arrhythmia.html#confusion-matrix-and-the-utility-of-the-prediction",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Confusion matrix and the utility of the prediction",
    "text": "Confusion matrix and the utility of the prediction\nThe quality of fit of the logistic regression can be assessed in headline terms by comparing the fitted probabilities of arrhythmia with the actual values:\n\n\n\nConfusion matrix for logistic regression\n\n\nArrhythmia\nPredict No\nPredict Yes\n\n\n\n\nNo\n146\n6\n\n\nYes\n51\n9\n\n\n\n\n\nSensitivity: 15%\nSpecificity: 96.1%\nPositive Predictive Value: 60%\nNegative Predictive Value: 74.1%\nHere, Predict No simply means the modelled probability is &lt;= 0.5 and Predict Yes means it’s over 0.5."
  },
  {
    "objectID": "arrhythmia.html#irregularity-unclarity-and-stickiness",
    "href": "arrhythmia.html#irregularity-unclarity-and-stickiness",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Irregularity, Unclarity and Stickiness",
    "text": "Irregularity, Unclarity and Stickiness\nWe have made a number of important assumptions regarding our gappiness and stickiness measures, notably that stickiness is unlikely to be of physiological interest whereas gappiness is our central measure of suspicion. We therefore would hope to find that there is no meaningful correlation between the two.\nIf we run a correlation test on the irregular_ratio and the strap_ratio we get the following:\n\n\n\nPearson’s product-moment correlation: results$irreg_ratio and results$strap_ratio\n\n\n\n\n\n\n\n\n\nTest statistic\ndf\nP value\nAlternative hypothesis\ncor\n\n\n\n\n1.496\n210\n0.1362\ntwo.sided\n0.1027\n\n\n\n\n\nThe correlation is weak at 10.3% and the p-value of 0.136 indicates that we cannot reject the null hypothesis (no correlation).\nIn contrast, and as we would expect, the irregularity ratio is highly correlated with the ratio of Unclears:\n\n\n\nPearson’s product-moment correlation: results$irreg_ratio and results$unclear_ratio\n\n\n\n\n\n\n\n\n\nTest statistic\ndf\nP value\nAlternative hypothesis\ncor\n\n\n\n\n25.54\n210\n2.417e-66 * * *\ntwo.sided\n0.8698\n\n\n\n\n\nThis suggests that we may, perhaps, be over-cautious in removing unclear activities from our analysis (including them does not change the results materially.)"
  },
  {
    "objectID": "arrhythmia.html#simplicity",
    "href": "arrhythmia.html#simplicity",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Simplicity",
    "text": "Simplicity\nA strength and a weakness of the algorithm for generating the irregular ratio is its simplicity. Given that we have hundreds of thousands of activity records from hundreds of athletes and typically thousands or tens of thousands of heart rate observations for each activity, it might be expected that a machine learning algorithm would perform better. Over time, this may be so but for so long as we only have a relatively small number of survey responses and the issue of identifying errors when sports devices have mis-parsed a heart rate signal remains entangled with the difficulty of true pattern detection, a simple algorithm that offers good heuristics is advantageous. It also helps that it is fast and easy to calculate."
  },
  {
    "objectID": "arrhythmia.html#limitations",
    "href": "arrhythmia.html#limitations",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Limitations",
    "text": "Limitations\nAs well as shortcomings in the mathematical model, there are intrinsic limitations in the data. Notably, there are likely to be athletes who have responded to our survey and who correctly report that they have not being diagnosed with arrhythmia but who nonetheless have it.\nWe made a number of assumptions regarding our gappiness and stickiness, notably that stickiness is unlikely to be of physiological interest whereas gappiness is our central measure of suspicion. We confirmed, however, that there was no correlation between the two.\nIf we had further details about subjects’ arrhythmias, it also would enable us to study the temporal pattern of the irregularity ratio, which, in the context of a date of onset or diagnosis, might be expected to be fruitful. For example, in the table given in the Confusion matrix section above we observed a relatively large number of cases where a survey response disclosed arrhythmia that was not predicted by the model. At least some of these may be due to remedial measures such as medication and/or reduction of exercise intensity consequent to diagnosis but pre-dating the collection of many or all activities."
  },
  {
    "objectID": "arrhythmia.html#data-available",
    "href": "arrhythmia.html#data-available",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Data available",
    "text": "Data available\nAt the time of writing, 1291 athletes have at some point authorised Crickles to access their data and of these 1074 currently remain authorised and are thus available for this study. The gender breakdown of the authorised athletes is as follows:\n\n\n\nAthletes by gender\n\n\nGender\nCount\n\n\n\n\nF\n74\n\n\nM\n991\n\n\nNA\n9\n\n\n\n\n\nThe youngest athlete is 19 years old, the eldest is 1951 years old and the median age is 53.22.\nFrom these athletes, we have analysed 1,876,121 activities, which arise from 39 different sports. The activity counts for the ten most heavily represented sports are as follows:\n\n\n\nActivity county of top ten sports\n\n\nSport\nRecords\n\n\n\n\nRide\n960,615\n\n\nRun\n321,323\n\n\nVirtualRide\n229,419\n\n\nWalk\n146,953\n\n\nWorkout\n54,188\n\n\nWeightTraining\n35,353\n\n\nSwim\n33,815\n\n\nYoga\n28,865\n\n\nHike\n25,235\n\n\nRowing\n9,892\n\n\n\n\n\nMany, but not all, of these activities are saved with heart rate readings recorded by the sports device throughout the activity. In fact, the proportion of activities that have heart rate data currently stands at 76.73%. When estimating cardiac stress, in the absence of heart rate data we can use statistical models based on factors such as speed, power and gradient as a proxy; however, for the purposes of this paper we only use those activities for which we have heart rate data."
  },
  {
    "objectID": "arrhythmia.html#analysis-of-strap-artefacts-seen-in-heart-rate-readings",
    "href": "arrhythmia.html#analysis-of-strap-artefacts-seen-in-heart-rate-readings",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Analysis of strap artefacts seen in heart rate readings",
    "text": "Analysis of strap artefacts seen in heart rate readings\nFirst, we look at the maximum heart rate levels recorded for each athlete. Taking out one outlier in which a heart rate of 365 beats per minute (bpm) was recorded, we find this distribution of maximum heart rates by athlete:\n\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n\n\n\n\n\nMaximum heart rates\n\n\n\n\nIf the traditional estimate maximum heart rate = 220 - age had any relevance to our population we might, remembering the age of our youngest athlete, expect the distribution to end at around 201bpm. This clearly does not happen. In fact, beyond an initial peak that perhaps indicates high valid, if unexpected, values for a fit cohort, we have a second peak above 240 bpm and 22.5% of our athletes record a maximum heart rate of 240bpm or more.\nEvery possible value between 173bpm and 255bpm for maximum heart rate is found for at least one athlete. With the single outlier exception, the distribution comes to a hard stop at 255bpm.\nOn medical and observational grounds, we do not believe that hundreds of athletes are genuinely attaining heart rates that are this high. Rather we attribute it to sporadic mis-recording by the sports devices used to capture heart rates.\nNor is this the only kind of error seen in the heart rate data. Here’s an example of a heart rate chart taken from an athlete activity:\n\n\n\n\n\nExtreme example of a sticky heart rate\n\n\n\n\nClearly, this is not a true picture of the athlete’s heart rate!\nIt can be more subtle. Take this example:\n\n\n\n\n\nSubtler case of stickiness\n\n\n\n\nAt a first glance, the top chart looks normal. However, if we zoom in, as we do on the lower chart, we can see a couple of sections where the reported heart rate is flatlining at a constant level. In fact, it twice reports a constant level for over two minutes. Again, such flatlining occurences are physiologically highly implausible yet frequently seen in the data, even though on longer activities, such as a three hour bike ride, a couple of minutes of flatlining might not be visually evident on a chart on a website."
  },
  {
    "objectID": "arrhythmia.html#analysis-of-device-by-sport",
    "href": "arrhythmia.html#analysis-of-device-by-sport",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Analysis of device by sport",
    "text": "Analysis of device by sport\nWe saw above that we took a sample of over 10,000 activities and analysed the usage by sport, device and device family. In this sample, 94 different devices were found.\nFor our purposes, the single most significant difference amongst those devices that measure heart rate lies between those that measure the heart rate using electrical sensors near to the heart and those that measure the pulse optically, typically at the wrist. Studies appear to show that the former are generally more reliable [REF]. A related factor is the frequency with which the heart rate is sampled by the device. This is a function not only of the device itself but often also of how it is configured by the user. For example, a bike computer that is being used to capture readings from a power meter as well as a heart rate monitor will usually sample data second by second. On the other hand, running watches will often adjust the sampling frequency dynamically in order to preserve battery life. We also need to remember that because of the interoperability between devices and the fact that we only have one device name (at most) per activity, we only know (at best) the device used to record the heart rate, and we can’t necessarily always strictly deduce from that how the heart rate was measured.\nWe studied the differences between devices by taking the mean time between readings for each activity and then finding the median of these times by device. This gives us the following:\n\n\n`summarise()` has grouped output by 'device_family'. You can override using the\n`.groups` argument.\n\n\n\nAverage heart rate sampling frequency in seconds\n\n\ndevice_family\nRide\nRun\nVirtualRide\n\n\n\n\nbike_computer\n2.0\n5.0\n1.1\n\n\nphone\n1.1\n1.8\nNA\n\n\nplatform\n1.0\nNA\n1.0\n\n\ntrainer\n1.0\nNA\n1.1\n\n\nwatch\n3.2\n3.6\n1.0\n\n\n\n\n\nAs expected, bike computers used by cyclists have a much lower median time between readings than watches used by runners. Virtual rides and rides using a platform or a trainer are very frequently also measuring power and plugged into a mains supply and it is therefore no surprise to see that they do second by second sampling.\nRuns using a bike computer are rare - there were only 6 in this sample.\nInfrequent sampling may be a factor behind a phenomenon often reported by users of sports watches: the heart rate readings they show tend to lag the actual heart rate. There are countless instances of this being reported anecodotally, sometimes by athletes wearing a sports watch and using a bike computer at the same time specifically to confirm the phenomenon, but as far as we are aware this has not been studied systematically.\nInsofar as sports watches are laggier than straps, this is most likely to be observed at low heart rates and at the start of activities when the heart rate is increasing from a relatively rested state. At the high end, the heart is unlikely to be able to increase dramatically and in any case the sampling algorithm is likely to have responed to the elevated heart rate and to set sampling to a greater frequency. Even so, it is to eliminate gappiness due to lagged readings that we correlate arrhythmia with the proportion of irregular activities rather than the proportion of all gappy readings, also including unclear activities.\nOur beliefs about the differences between the operation of sports watches and chest straps lead us to two expectations:\n\nSince we believe that watches are laggier than chest straps, we expect that the unclear ratio for watches will be higher than for straps;\n\nSince we postulate that irregularity - gappiness only at the high end of the range - is in part due to electrical cardiac phenomema, we expect that the irregular ratio for straps will be higher than for watches.\n\nBoth of these expectations are borne out in our sample:\n\n\n\nRegularity percentages by device family\n\n\ndevice_family\nirreg_ratio\nstrap_ratio\nunclear_ratio\n\n\n\n\nbike_computer\n2.7\n5.1\n8.2\n\n\nphone\n0.0\n11.7\n3.0\n\n\nplatform\n0.4\n5.7\n1.2\n\n\ntrainer\n0.8\n9.1\n0.8\n\n\nwatch\n1.9\n2.1\n14.8\n\n\n\n\n\nWhile we would have liked to have been able to select only activities for which we know that heart rate readings were taken from a chest strap, we were unable to do so for the reasons explained above and we believe that selecting only cycling activities in fact achieves this to an acceptable extent."
  },
  {
    "objectID": "arrhythmia.html#residuals",
    "href": "arrhythmia.html#residuals",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Residuals",
    "text": "Residuals\nIn addition to the results shown above, we can analyse leverage and residuals to evaluate the logistic regression model.\nThe expected leverage is 0.009434 and should lie between 0 and 1. The actual values lie between 0.005015 and 0.0779486.\nWe would expect to see ~5% of the residuals (numerically = 10.6) have absolute size greater than 1.96; in fact, we see 1. Likewise, we would expect to see ~1% of the residuals (numerically = 2.12) have absolute size greater than 2.58; in fact, we see 0."
  },
  {
    "objectID": "arrhythmia.html#data-sufficiency",
    "href": "arrhythmia.html#data-sufficiency",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Data sufficiency",
    "text": "Data sufficiency\nEven after we whittled down our initial population of hundreds of thousands of activities to those with heart rate data from rides conducted by survey respondents, we are still left with 207855 activities. These are satisfactorily spread amongst arrhythmics and non-arrhythmics: the distribution of numbers of filtered activities for the former is:\n\n\n\n\n\n\n\n\n\n\n\n\n\nMin.\n1st Qu.\nMedian\nMean\n3rd Qu.\nMax.\n\n\n\n\n43\n316.2\n789.5\n823.8\n1282\n2765\n\n\n\n\n\nand for the latter:\n\n\n\n\n\n\n\n\n\n\n\n\n\nMin.\n1st Qu.\nMedian\nMean\n3rd Qu.\nMax.\n\n\n\n\n6\n463.8\n926.5\n1042\n1491\n4189"
  },
  {
    "objectID": "arrhythmia.html#other-survey-questions",
    "href": "arrhythmia.html#other-survey-questions",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Other survey questions",
    "text": "Other survey questions\nAs stated above, the heart health survey captures a number of data points from respondents. Of these, the only question whose response we consider in this analysis is Do you have, or have you had, a heart rhythym problem? The relationship between answers to all of the questions in the survey can be illustrated with an UpSet plot:\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_bar()`).\n\n\n\n\n\n\n\n\n\nThe green bars indicate how many affirmative responses were given to each question. For example, the bottom two bars tell us that 63 respondents reported arrhythmia and 92 supplied other information (in free-form text). The heights of the blue columns, also given numerically, encode the intersection size of affirmative responses as indicated by the black dots. For example, the first column shows that 24 respondents gave extra information while reporting none of the five symptoms. Also, if we sum across the columns for which “other info” is given and arrhythmia is also reported we find that there are 42 such responses.\nIn future, especially if we have a much larger data set, it may be fruitful to examine the other symptoms and the free format “other information” for potential explanatory significance."
  },
  {
    "objectID": "arrhythmia.html#out-of-sample-test",
    "href": "arrhythmia.html#out-of-sample-test",
    "title": "Detecting arrhythmia from exercise data (DRAFT)",
    "section": "Out of sample test",
    "text": "Out of sample test\nSince the original draft of this paper was written the number of survey responses has increased and it is now more feasible to hold back a testing set from the sample of surveys. Apportioning 75% of our surveys for training and the rest for testing generates the following confusion matrix on the test set:\n\n\n\n\nConfusion matrix for an out of sample test set\n\n\nArrhythmia\nPredict No\nPredict Yes\n\n\n\n\nNo\n37\n1\n\n\nYes\n13\n2\n\n\n\n\n\nSensitivity: 13.3%\nSpecificity: 97.4%\nPositive Predictive Value: 66.7%\nNegative Predictive Value: 74%"
  },
  {
    "objectID": "posts/2025-06-07_welcome-new-crickles.html",
    "href": "posts/2025-06-07_welcome-new-crickles.html",
    "title": "Welcome to the new Crickles site!",
    "section": "",
    "text": "As you can see, the Crickles website has had a makeover. The first purpose of this is to re-integrate the Navigator with the rest of our content; these have been separated for some months and are now back together.\nA second purpose is to provide a site where the methodologies used by Crickles and analysis based on this can naturally be shown together. This will all be grouped under the Research heading on the menu bar. At the time of writing, there are two papers there:\n\nA detailed explanation of how Crickles calculates sustainable heart rate.\nOur analysis of the relationship between the frequency or irregular activities and a diagnosis of a heart rhythm issue such as atrial fibrillation.\n\nIt is our intention to build out much more such content. To guide us, we are still keen to get feedback on how comprehensible, interesting and possibly even useful this is. The derivation of sustainable heart rate is relatively straightforward in comparison to the models used to determine heart rate intensity and cardiac stress. We would like to gauge the exposition of the material to the nature of interest from the Crickles community and we can expect to have to learn how we go to get this right.\nMeanwhile, for the time being the content that we’ve written and been able to publish remains on the old home page, which you can still find here."
  },
  {
    "objectID": "sustainable.html",
    "href": "sustainable.html",
    "title": "Sustainable Heart Rate Levels in Crickles",
    "section": "",
    "text": "Here we show how Crickles calculates Sustainable Heart Rate. The methodology is described and code snippets in R are given to illustrate the exact calculations. For non-R-programmers the snippets are broadly readable once you grasp that |&gt; means then, mutate is defining a variable and map (and variants such as map_dbl) is an instruction to run a function over a range of values. If you prefer you can just skip over all the grey boxes that show code.\nSustainable Heart Rate is used in the setting of zones and in the determination of Cardiac Stress; the latter requires much more sophisticated modelling and will be documented separately.\nSustainable Heart Rate in this context is taken to be the heart rate that an athlete can sustain for one hour. This is preferred over maximum heart rate for purposes such as zone setting as it is more stable and less susceptible to the frequent heart rate measurement anomalies observed when using chest straps and sports watches. It can be thought of as an alternative to the use of Lactate Threshold Heart Rate (LTHR) in this regard. Since we lack the ability to measure blood lactate or inhaled and exhaled gases, LTHR is not available to us whereas sustainable heart rate can be directly measured.\nThe process for determining sustainable heart rate is described in three sections:\n\nPreparation. Mainly this is data preparation. Since this is not generally replicable by the reader, what it needs to achieve is described in place of the actual process of data gathering.\nBackground analysis. This is the analysis of a history of data in order to determine certain values that will be used to estimate Sustainable Heart Rate in each case.\nApplication to individuals. Here we describe how the Sustainable Heart Rate and associated data shown in Crickles is derived."
  },
  {
    "objectID": "sustainable.html#introduction",
    "href": "sustainable.html#introduction",
    "title": "Sustainable Heart Rate Levels in Crickles",
    "section": "",
    "text": "Here we show how Crickles calculates Sustainable Heart Rate. The methodology is described and code snippets in R are given to illustrate the exact calculations. For non-R-programmers the snippets are broadly readable once you grasp that |&gt; means then, mutate is defining a variable and map (and variants such as map_dbl) is an instruction to run a function over a range of values. If you prefer you can just skip over all the grey boxes that show code.\nSustainable Heart Rate is used in the setting of zones and in the determination of Cardiac Stress; the latter requires much more sophisticated modelling and will be documented separately.\nSustainable Heart Rate in this context is taken to be the heart rate that an athlete can sustain for one hour. This is preferred over maximum heart rate for purposes such as zone setting as it is more stable and less susceptible to the frequent heart rate measurement anomalies observed when using chest straps and sports watches. It can be thought of as an alternative to the use of Lactate Threshold Heart Rate (LTHR) in this regard. Since we lack the ability to measure blood lactate or inhaled and exhaled gases, LTHR is not available to us whereas sustainable heart rate can be directly measured.\nThe process for determining sustainable heart rate is described in three sections:\n\nPreparation. Mainly this is data preparation. Since this is not generally replicable by the reader, what it needs to achieve is described in place of the actual process of data gathering.\nBackground analysis. This is the analysis of a history of data in order to determine certain values that will be used to estimate Sustainable Heart Rate in each case.\nApplication to individuals. Here we describe how the Sustainable Heart Rate and associated data shown in Crickles is derived."
  },
  {
    "objectID": "sustainable.html#preparation",
    "href": "sustainable.html#preparation",
    "title": "Sustainable Heart Rate Levels in Crickles",
    "section": "2 Preparation",
    "text": "2 Preparation\nIn code not shown here we load three data sets:\n\nselection - a sample of activities over a three year period from athletes who were active before the start and after the end of that period. We include activities only from athletes who did at least 30 with heart rate data of over an hour or more in each of the three years. We only include activities that have a Crickles Regularity value of Regular in order to screen out activities where the chest strap or sports watch recording the heart rate was not performing correctly.\nathlete_age - a dataframe simply giving the age of each athlete at the mid point of the middle year in the three year range.\nsample_athlete - a dataframe of all historical activities for a sample Crickles user.\n\nIn addition, we define a function called fetch_streams() that gets the stream-level data - typically second by second heart rate - for a given activity."
  },
  {
    "objectID": "sustainable.html#background-analysis",
    "href": "sustainable.html#background-analysis",
    "title": "Sustainable Heart Rate Levels in Crickles",
    "section": "3 Background analysis",
    "text": "3 Background analysis\nAlthough we use Sustainable Heart Rate as a reference point in time, we are usually interested in efforts over shorter time windows than one hour. Fortunately, there are stable relationships between sustainable heart rate levels over different time windows and we can use these to baseline efforts over a range of different time windows to an hour-equivalent rate.\nWe use historical data to establish what these relationships are and to confirm their stability.\n\n\nCode\n# first we define a ladder of four functions needed to calc sustainable \n# heart rate levels over a number of time windows for many athletes\n\n# 1 - function to get hr windows for one streams file\nhr_windows &lt;- function(streams) {\n  \n  if (!\"heartrate\" %in% names(streams)) {\n    message(\"No heartrate\")\n    return(NA)\n  }\n  \n  # If necessary, complete time series and fill gaps\n  if (nrow(streams) != max(streams$time) + 1) {\n    max_ok_gap &lt;- 10\n    min_heartrate &lt;- min(streams$heartrate, na.rm = TRUE)\n\n    streams &lt;- streams |&gt;\n      mutate(next_gap = lead(time) - time,\n             heartrate = if_else(next_gap &lt; max_ok_gap, heartrate, min_heartrate)) |&gt;\n      complete(time = full_seq(time, period = 1)) |&gt;\n      fill(heartrate)\n  }\n  \n  # specify the windows and remove any that are longer than the activity\n  grid &lt;- 60 * c(6, 20, 40, 60)\n  grid &lt;- grid[grid &lt;= max(streams$time, na.rm = TRUE)]\n  \n  # calculate the max sustained hr for each window and return the list\n  result &lt;- map_dbl(grid, \\(x) max(rollmean(streams$heartrate, x, partial = FALSE), \n                                   na.rm = TRUE))\n  output &lt;- replace(rep(NA, 4), \n                    seq_along(result), \n                    ifelse(is.finite(result), result, NA))\n  names(output) &lt;- c(\"HR_6\", \"HR_20\", \"HR_40\", \"HR_60\")\n  return(as.list(output))\n}\n\n# 2 - function to get the hr windows for a set of activities\nmany_windows &lt;- function(acts) {\n  safe_fetch_hr &lt;- possibly(\\(athlete, act_id) fetch_streams(athlete, act_id) |&gt; \n                              hr_windows(),\n                            otherwise = NULL)\n  \n  map2_df(acts$athlete_id, acts$id, safe_fetch_hr)\n}\n\n# 3 - function to process a set of activities by athlete\nathlete_windows &lt;- function(acts, athlete) {\n  acts |&gt; filter(athlete_id == athlete) |&gt; \n    group_by(year) |&gt; \n    nest() |&gt; \n    mutate(results = map(data, \\(x) suppressWarnings(many_windows(x)))) |&gt; \n    unnest(results) |&gt; \n    summarise(\n      max_6  = max(HR_6,  na.rm = TRUE), \n      max_20 = max(HR_20, na.rm = TRUE), \n      max_40 = max(HR_40, na.rm = TRUE), \n      max_60 = max(HR_60, na.rm = TRUE)) |&gt; \n    select(- year) |&gt; \n    map(median) |&gt;\n    as_tibble() |&gt;\n    mutate(ratio_6 = max_60/max_6,\n           ratio_20 = max_60/max_20,\n           ratio_40 = max_60/max_40)\n}\n\n# 4 - function to process a set of activities for many athletes\nmany_athletes &lt;- function(acts) {\n  plan(multisession, workers = 8)\n  athletes &lt;- unique(acts$athlete_id)\n  result &lt;- future_map_dfr(\n    athletes, \n    possibly(\\(athlete) {\n      athlete_windows(acts, athlete) |&gt; \n        mutate(athlete_id = athlete)\n    }, \n    otherwise = NULL))\n  return(result)\n}\n\n# now, run the last function to get a dataframe for all athletes:\nall_athletes &lt;- many_athletes(selection)\n\n\n\n\nCode\n# now we can prepare visualisations of the analysis,\n# starting with a boxplot:\n\nx_order_ratio &lt;- c(\"ratio_6\", \"ratio_20\", \"ratio_40\")\n\nbox_plot &lt;- all_athletes |&gt;\n  pivot_longer(cols = c(ratio_6, ratio_20, ratio_40), \n               names_to = \"variable\", \n               values_to = \"value\") |&gt;\n  mutate(variable = factor(variable, levels = x_order_ratio)) |&gt;\n  ggplot(aes(x = variable, y = value)) +\n    geom_boxplot() +\n    labs(title = \"Distribution of ratios across athletes\", \n         x = \"window\", \n         y = \"ratio to 1 hour\") +\n    theme_minimal()\n\nif (!is.null(params$athlete)) {\n  overlay_point &lt;- all_athletes |&gt;\n  filter(athlete_id == params$athlete) |&gt;\n  select(all_of(x_order_ratio)) |&gt;\n  pivot_longer(cols = everything(), \n               names_to = \"variable\", \n               values_to = \"point_value\") |&gt;\n  mutate(variable = factor(variable, levels = x_order_ratio))\n  box_plot &lt;- box_plot +\n    geom_point(data = overlay_point, \n               aes(x = variable, y = point_value),\n                color = \"red\", \n                size = 3, \n                shape = 18)\n}\n\nbox_plot\n\n\n\n\n\n\n\n\n\nThe box plot shows the range of values for each of the ratios. The red lozenges show the values for our sample athlete whose data we’ll be looking at later.\nThe median values across all athletes can be summarised as follows:\n\n\n   max_6   max_20   max_40   max_60  ratio_6 ratio_20 ratio_40 \n 175.906  170.557  166.559  161.808    0.919    0.951    0.979 \n\n\nHere the max_ values show the median maximum heart rate for the period in minutes shown. For example, max_20 gives the median heart rate that can be sustained for 20 minutes by this sample of athletes on Crickles. The ratio_ values, which are ultimately more important in Crickles, are the median values of the ratio between the sustainable rate over one hour and the corresponding period, respectively. For example, ratio_20 is the median value of the 60 minutes sustainable heart rate over the 20 minute sustainable heart rate; ratio_60 isn’t shown because by definition it would always be 1. These ratios enable us to infer what levels sustained over different durations might imply for the capacity to sustain a heart rate for an hour.\nWe’re going to use ratio_n values to calculate sustainable heart rate so it matters that they’re stable and reasonably consistent between athletes. Experience shows that they don’t change much over time. We can get a measure of their stability across athletes by looking at the interquartile range, or spread of the majority of the values, as a proportion of the median:\n\n\nCode\nall_athletes |&gt; \n  select(-athlete_id) |&gt; \n  map_dbl(\\(x) (100 * IQR(x)/median(x)) |&gt; round(1))\n\n\n   max_6   max_20   max_40   max_60  ratio_6 ratio_20 ratio_40 \n     7.4      9.6      9.1      9.0      3.8      3.5      2.0 \n\n\nThis shows that there is much less dispersion of the ratios than there is of the maximum values, and it’s the ratios that we need to be consistent across time and athletes. Taking ratio_20 as an example again, this shows that half of the athletes have values lying in a band around the median whose width is 3.5% of the median value (so most would be within 2% of the median).\nWe might wonder whether the ratios change as athletes age. We know that maximum heart rates does, and we can verify that here. For example, we can show the tendency for the heart rate that can be sustained for 20 minutes to decline with age:\n\n\nCode\nall_athletes &lt;- all_athletes |&gt; \n  left_join(athlete_age) \n\n\nJoining with `by = join_by(athlete_id)`\n\n\nCode\nall_athletes |&gt; \n  ggplot(aes(x = age, y = max_20)) +\n    geom_point() +\n    geom_smooth(method = \"lm\", se = F) +\n    theme_light() +\n    labs(title = \"Sustainable 20 minute heart rate as a function of age\",\n          y = \"bpm\",\n          caption = paste(\"Source: Crickles. n: \", nrow(all_athletes)))\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nThere is no such relationship between the ratios and age. To get a better sense of the relationship between all of these variables and age we can look at a correlation matrix:\n\n\nCode\nall_athletes |&gt; \n  select(-athlete_id) |&gt; \n  cor() |&gt; \n  as.table() |&gt; \n  as.data.frame() |&gt; \n  setNames(c(\"Var1\", \"Var2\", \"Correlation\")) |&gt; \n  ggplot(aes(Var1, Var2, fill = Correlation)) +\n  geom_tile(color = \"white\") + \n  geom_text(aes(label = scales::label_number(accuracy = 0.01)(Correlation),\n                color = abs(Correlation) &lt; 0.5), \n                size = 3.5) + \n  scale_fill_gradient2(low = \"blue\", \n                       mid = \"white\", \n                       high = \"red\", \n                       midpoint = 0) +\n  scale_color_manual(values = c(\"black\", \"white\"), \n                     guide = \"none\") + \n  theme_minimal() +\n  labs(title = \"Correlation Matrix\", \n       fill = \"Correlation\", \n       x = \"\", \n       y = \"\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nIt is evident that age correlates strongly (and negatively) with maximum heart rate levels - about 60% in all windows - but only inconsequentially with the ratios."
  },
  {
    "objectID": "sustainable.html#application-to-individual-athletes",
    "href": "sustainable.html#application-to-individual-athletes",
    "title": "Sustainable Heart Rate Levels in Crickles",
    "section": "4 Application to individual athletes",
    "text": "4 Application to individual athletes\nThe calculation of Sustainable Heart Rate is in two steps:\n\nFor each activity where heart rate is recorded the observed maximum heart rate over each of the time windows cited above is calculated. Each of these is weighted, also as above, to convert it to an estimate of a one hour equivalent. The maximum of these is recorded as the spot_hr for that activity. The purpose of this is to use information from a number of different time windows as it is only relatively rarely that an athlete will operate at or over threshold for an hour or more.\nAt any point in time Crickles looks back to find the maximum recent spot_hr value. Recency is important as fitness, including cardiac fitness, varies seasonally and with age and a performance observed, say, a year ago may not be repeatable today. Conversely, it is necessary to look back far enough to capture any efforts that are still indicative of current fitness. The Sustainable Heart Rate calculation aims to attain a balance that captures relevantly recent activities while discarding observations as they become stale.\n\n\n4.1 Determining spot_hr\n\n\nCode\n# We create a function that calculates the maximum sustained hr over each window\n# and then converts these to an hour equivalent using the weights found above.\n\n# First, we make a function that does this given 'streams'...\nhr_windows_weighted &lt;- function(streams) {  \n  \n  # Define HR weights explicitly\n  weights &lt;- c(HR_6 = 0.913, HR_20 = 0.954, HR_40 = 0.98, HR_60 = 1)\n\n  # Safely compute sustainable HR values\n  sus_windows &lt;- possibly(hr_windows, \n                          otherwise = setNames(rep(NA_real_, length(weights)), names(weights)))(streams)\n\n  sus_windows &lt;- unlist(sus_windows)[names(weights)] \n\n  # Calculate weighted HR\n  weighted_hr &lt;- sus_windows * weights\n\n  # Find max weighted HR, handling NA\n  spot_hr &lt;- suppressWarnings(max(weighted_hr, na.rm = TRUE))\n  if (!is.finite(spot_hr)) spot_hr &lt;- NA_real_\n\n  # Find corresponding window length and extract numeric part\n  spot_window &lt;- if (!is.na(spot_hr)) {\n    names(weighted_hr)[which.max(weighted_hr)] |&gt; \n      str_remove(\"HR_\") |&gt; \n      as.numeric()\n  } else {\n    NA_real_\n  }\n\n  # Return formatted list\n  list(\n    spot_hr = round(spot_hr, 1),\n    best_window = spot_window,\n    all_weighted_hr = round(weighted_hr, 1)\n  )\n}\n\n# Then we wrap this in a function that takes an activity id...\nactivity_windows_weighted &lt;- function(act_ID) {\n  safe_fetch_streams &lt;- possibly(fetch_streams, \n                                 otherwise = NULL)\n  safe_hr_windows_weighted &lt;- possibly(hr_windows_weighted, \n                                       otherwise = list(spot_hr = NA))\n  this_streams &lt;- safe_fetch_streams(params$athlete, act_ID)\n  \n  if (is.null(this_streams)) return(NA)\n  results &lt;- safe_hr_windows_weighted(this_streams)\n  return(results$spot_hr)\n}\n\n\nAs an example, take an activity that has this heart rate chart:\n\n\nCode\nsample &lt;- fetch_streams(params$athlete, params$sample_id) \nsample |&gt;\n  mutate(minutes = time/60) |&gt;\n  ggplot(aes(x = minutes, y = heartrate)) +\n  geom_point(col = \"red\") +\n  geom_line(col = \"red3\") +\n  theme_light()\n\n\n\n\n\n\n\n\n\nWe can find the sustained heart rate over each of the time windows:\n\n\nCode\nhr_windows(sample) |&gt; unlist() |&gt; round(1)\n\n\n HR_6 HR_20 HR_40 HR_60 \n131.2 125.2 122.2 118.2 \n\n\nFor example, the value labelled HR_20 is the highest heart rate that was sustained for 20 minutes.\nUsing this information together with the equivalency weights, we calculate the spot_hr and show the time window on which this is based:\n\n\nCode\nhr_windows_weighted(sample)\n\n\n$spot_hr\n[1] 119.8\n\n$best_window\n[1] 6\n\n$all_weighted_hr\n HR_6 HR_20 HR_40 HR_60 \n119.8 119.5 119.7 118.2 \n\n\nIn this example, the short effort spike that can be seen on the chart almost half way through the activity gives us the highest estimate for the one hour sustainable heart rate so we use that.\nThe spot_hr, being the estimated sustained heart rate for each individual activity, is shown in Crickles on the Activities page as is the corresponding time window, which appears as Best_HR_Bucket.\n\n\n4.2 Sustainable Heart Rate\nFrom the history of spot_hr’s for each activity with heart rate data we need to compute a sustainable heart rate estimate for each point in time. For this, we must observe and remember the greatest recent effort, remembering that it is relatively rare for an athlete to push themselves to the limit. The way that Crickles currently composes a sustainable heart rate estimate from the history of spot_hr’s is to average the highest value from the last four weeks and the highest value from the last twelve weeks (which may be the same). The rationale for this is as follows… As fitness varies, we take the last four week period to be definitive for current fitness. On the other hand, observations taken from over twelve weeks (almost a quarter) into the past are taken to be stale from the perspective of current capability. Observations of spot_hr from between four and the twelve weeks ago can still colour the current estimate but cannot wholly define it.\nWe can illustrate this with an example.\n\n\nCode\n# sample_athlete is a dataframe of activities for one sample athlete\n# here we calculate the spot_hr for each one\nplan(multisession, workers = 8)\nsample_athlete$spot_hr &lt;- future_map_dbl(sample_athlete$ID, activity_windows_weighted) \nplan(sequential)\n\n# a bit of renaming...\nsample_athlete &lt;- sample_athlete |&gt; \n  rename(start_date_local = Date,\n         id = ID)\n\n# now we define a function to roll up sustainable hr as described\nsus_hr &lt;- function(acts) {\nacts |&gt;\n  arrange(start_date_local) |&gt;\n  mutate(date1 = ymd(as.Date(start_date_local)),\n         spot_hr_valid = ifelse(Regular == \"Regular\", spot_hr, NA)) |&gt;\n  complete(date1 = full_seq(date1, period = 1)) |&gt;\n  fill(spot_hr, spot_hr_valid) |&gt;\n  mutate(sus_hr_short = rollmax(spot_hr_valid,\n                                28,\n                                align = \"right\",\n                                na.rm = TRUE,\n                                fill = NA),\n          sus_hr_long = rollmax(spot_hr_valid,\n                                84,\n                                align = \"right\",\n                                na.rm = TRUE,\n                                fill = NA),\n          sustainable_hr = round(0.5*(sus_hr_short + sus_hr_long),1)) |&gt;\n  select(-c(date1, sus_hr_short, sus_hr_long, spot_hr_valid)) |&gt;\n  drop_na(id) |&gt;\n  arrange(desc(start_date_local)) -&gt; acts\nreturn(acts)\n}\n\n# and see how that applies to our sample athlete:\nsus_hr(sample_athlete) |&gt; \n  ggplot(aes(x = start_date_local)) +\n  geom_point(aes(y = spot_hr), col = \"grey\", alpha = 0.5) +\n  geom_line(aes(y = sustainable_hr), col = \"seagreen\") +\n  theme_light() +\n  labs(title = \"Sustainable heart rate (line) over spot_hr (points)\", \n       x = \"date\",\n       y = \"heart rate (bpm)\")\n\n\nWarning: Removed 39 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n\nWe can see that, while there are many different methods we could use to calculate sustainable heart rate including some that give a less stepped line, the method that we use does a good job of sitting just above the spot_hr values. Those points that lie on the green line are precisely those for activities whose heart rate intensity, shown as HRI on the Activities page, is &gt;= 1. On the Crickles Navigator Timeline page this is shown as Intensity in the tool tip for each point with heart rate data, where it is multiplied by 100 (so, for example, 90 instead of 0.9)."
  }
]